import math
import random

class K18_07a:
    def __init__(self, x):
        self.plcolo = 3.14 * x * x
    
class K18_07b:
    def __init__(self, x):
        self.pltrik = math.sqrt(3) * x * x / 4

class K18_07:
    def __init__(self, x, y):
        self.plzag = x * y

    def func1 (self, r1, r2, a, m = 2, n = 2):
        self.p1 = K18_07a(r1)
        self.p2 = K18_07a(r2)
        self.p3 = K18_07b(a)
        self.k1 = m
        self.k2 = n
    
    def func2 (self):
        self.func2 = self.plzag - self.p1.plcolo * self.k1 - self.p2.plcolo * self.k2 - self.p3.pltrik
    
    def func3 (self):
        print(f'–ó–∞–≥–∞–ª—å–Ω–∞ –ø–ª–æ—â–∞ = {str(self.plzag)}—Å–º.–∫–≤')
        print(f'–ó–∞–ª–∏—à–æ–∫ –ø–ª–æ—â—ñ = {str(self.func2)}—Å–º.–∫–≤')

# ob = K18_07(30, 20)
# ob.func1 (4, 6, 5)
# ob.func2 ()
# ob.func3 ()

# Example from GPT
# Compositional approach in OOP
# –°—É—Ç—å –∫–æ–º–ø–æ–∑–∏—Ü—ñ–π–Ω–æ–≥–æ –ø—ñ–¥—Ö–æ–¥—É –≤ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—ñ –ø–æ–ª—è–≥–∞—î –≤ —Ç–æ–º—É, —â–æ–± —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Å–∫–ª–∞–¥–Ω—ñ –æ–±‚Äô—î–∫—Ç–∏ –∑ –ø—Ä–æ—Å—Ç—ñ—à–∏—Ö, 
# –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –≤–∫–ª—é—á–µ–Ω–Ω—è –æ–¥–Ω–∏—Ö –∫–ª–∞—Å—ñ–≤ —É —ñ–Ω—à—ñ —è–∫ –∞—Ç—Ä–∏–±—É—Ç–∏.
# –¶–µ –¥–æ–∑–≤–æ–ª—è—î —É–Ω–∏–∫–Ω—É—Ç–∏ –∂–æ—Ä—Å—Ç–∫–æ—ó —ñ—î—Ä–∞—Ä—Ö—ñ—ó —Å–ø–∞–¥–∫—É–≤–∞–Ω–Ω—è —ñ –∑—Ä–æ–±–∏—Ç–∏ –∫–æ–¥ –≥–Ω—É—á–∫—ñ—à–∏–º —ñ –ª–µ–≥—à–∏–º –¥–ª—è –∑–º—ñ–Ω.

# class Engine:
#     def start(self):
#         print("Engine start")
    
# class Car:
#     def __init__(self):
#         self.engine = Engine()
    
#     def drive(self):
#         self.engine.start()
#         print('Car is moving')

# my_car = Car()
# my_car.drive()

# –Ø–∫–∏–π –∫–ª–∞—Å –Ω–∞–∑–∏–≤–∞—é—Ç—å –∫–ª–∞—Å–æ–º-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º? 
# –ö–ª–∞—Å–æ–º - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º –Ω–∞–∑–∏–≤–∞—é—Ç—å –∫–ª–∞—Å, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—à—ñ –æ–±—î–∫—Ç–∏(—ñ–Ω—à–∏—Ö –∫–ª–∞—Å—ñ–≤) —è–∫ —Å–≤–æ—ó –∞—Ç—Ä–∏–±—É—Ç–∏.
# –û—Å–Ω–æ–≤–Ω–∞ —Ä–æ–ª—å - –æ–±—î–¥–Ω—É–≤–∞—Ç–∏ –∞–±–æ –∫–µ—Ä—É–≤–∞—Ç–∏ —ñ–Ω—à–∏–º–∏ –æ–±—î–∫—Ç–∞–º–∏, —Å—Ç–≤–æ—Ä—é—é—á–∏ —Å–∫–ª–∞–¥–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É
# –û–∑–Ω–∞–∫–∏ –∫–ª–∞—Å—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: 1) –ú–∞—î –æ–¥–∏–Ω –∞–±–æ –∫—ñ–ª—å–∫–∞ –∞—Ç—Ä–∏–±—É—Ç—ñ–≤, —è–∫—ñ —î –æ–±—î–∫—Ç–∞–º–∏ —ñ–Ω—à–∏—Ö –∫–ª–∞—Å—ñ–≤
#                          2) –ó–∞–±–µ–∑–ø–µ—á—É—î –¥–æ—Å—Ç—É–ø –¥–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É —Ü–∏—Ö –æ–±—î–∫—Ç—ñ–≤
#                          3) –ß–∞—Å—Ç–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó 
# Exapmle:

# class CPU:
#     def info(self):
#         return "Processor: Intel I5" 
    
# class RAM:
#     def info(self):
#         return "RAM: 16GB"

# # –ö–ª–∞—Å-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (Container-class), –±–æ –º—ñ—Å—Ç–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç–∏, —è–∫—ñ —î –æ–±—î–∫—Ç–∞–º–∏ –∫–ª–∞—Å—ñ–≤ CPU —ñ RAM
# class Computer:
#     def __init__(self):
#         self.cpu = CPU()
#         self.ram = RAM()
    
#     def show_specs(self):
#         print(self.cpu.info())
#         print(self.ram.info())

# pc = Computer()
# pc.show_specs()

# –Ü–∑ —è–∫–æ—é –ú–µ—Ç–æ—é –∑–∞—Å—Ç–æ—Å–æ–≤—É—é—Ç—å –∫–æ–º–ø–æ–∑–∏—Ü—ñ–π–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥? 
# üîπ 1. –ì–Ω—É—á–∫–æ—Å—Ç—ñ –≤ –ø—Ä–æ–µ–∫—Ç—É–≤–∞–Ω–Ω—ñ
# –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –º–æ–∂–Ω–∞ –ª–µ–≥–∫–æ –∑–∞–º—ñ–Ω—é–≤–∞—Ç–∏, –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∞–±–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –±–µ–∑ –∑–º—ñ–Ω–∏ –≤—Å—ñ—î—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏.
# üîπ 2. –ö—Ä–∞—â–æ—ó –º–æ–¥—É–ª—å–Ω–æ—Å—Ç—ñ
# –û–±‚Äô—î–∫—Ç–∏ —Ä–æ–∑–¥—ñ–ª—è—é—Ç—å—Å—è –Ω–∞ –Ω–µ–∑–∞–ª–µ–∂–Ω—ñ —á–∞—Å—Ç–∏–Ω–∏ (–∫–ª–∞—Å–∏), —è–∫—ñ –ø—Ä–æ—Å—Ç—ñ—à–µ —Ç–µ—Å—Ç—É–≤–∞—Ç–∏, –Ω–∞–ª–∞–≥–æ–¥–∂—É–≤–∞—Ç–∏ —ñ —Ä–æ–∑–≤–∏–≤–∞—Ç–∏.
# üîπ 3. –ó–º–µ–Ω—à–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Å–ø–∞–¥–∫—É–≤–∞–Ω–Ω—è
# –ö–æ–º–ø–æ–∑–∏—Ü—ñ—è –¥–æ–∑–≤–æ–ª—è—î —É–Ω–∏–∫–Ω—É—Ç–∏ —Å–∫–ª–∞–¥–Ω–æ—ó —ñ—î—Ä–∞—Ä—Ö—ñ—ó –∫–ª–∞—Å—ñ–≤, —â–æ —á–∞—Å—Ç–æ –±—É–≤–∞—î –≤–∞–∂–∫–æ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞—Ç–∏.
# üîπ 4. –ü–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–æ–¥—É
# –û–¥–∏–Ω —ñ —Ç–æ–π —Å–∞–º–∏–π –∫–ª–∞—Å –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –≤ —Ä—ñ–∑–Ω–∏—Ö –æ–±'—î–∫—Ç–∞—Ö-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö.
# üìå –í–∏—Å–Ω–æ–≤–æ–∫:
# –ö–æ–º–ø–æ–∑–∏—Ü—ñ—è –¥–æ–ø–æ–º–∞–≥–∞—î —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –≥–Ω—É—á–∫–∏–π, –∑—Ä–æ–∑—É–º—ñ–ª–∏–π —ñ –∑—Ä—É—á–Ω–∏–π –¥–ª—è –∑–º—ñ–Ω –∫–æ–¥, —â–æ –æ—Å–æ–±–ª–∏–≤–æ –≤–∞–∂–ª–∏–≤–æ –≤ –≤–µ–ª–∏–∫–∏—Ö —ñ —Å–∫–ª–∞–¥–Ω–∏—Ö –ø—Ä–æ—î–∫—Ç–∞—Ö.

# 4 –ü–æ—è—Å–Ω—ñ—Ç—å —Å—É—Ç–Ω—ñ—Å—Ç—å –∫–æ–º–ø–æ–∑–∏—Ü—ñ–π–Ω–æ–≥–æ –ø—ñ–¥—Ö–æ–¥—É –≤ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—ñ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ: 

# class Battery:
#     def info(self):
#         return "4000 mAh"

# class Screen:
#     def info(self):
#         return '6.5-inch OLED'

# class Camera:
#     def info(self):
#         return "48 MP"

# # Container - class
# class Smartphone: 
#     def __init__(self):
#         self.baterry = Battery()
#         self.camera = Camera()
#         self.screen = Screen()
    
#     def show_specs(self):
#         print(f'Screen: {self.screen.info()}')
#         print(f'Baterry: {self.baterry.info()}')
#         print(f'Camera: {self.camera.info()}')

# # using Compositional method in OOP
# phone = Smartphone()
# phone.show_specs()

# üß† –°—É—Ç—å –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó —Ç—É—Ç –≤ —Ç–æ–º—É, —â–æ:
# -–ö–ª–∞—Å Smartphone –Ω–µ –Ω–∞—Å–ª—ñ–¥—É—î —ñ–Ω—à—ñ –∫–ª–∞—Å–∏.
# -–í—ñ–Ω –≤–∫–ª—é—á–∞—î (has-a) –æ–±‚Äô—î–∫—Ç–∏ —ñ–Ω—à–∏—Ö –∫–ª–∞—Å—ñ–≤ —è–∫ —Å–∫–ª–∞–¥–æ–≤—ñ —á–∞—Å—Ç–∏–Ω–∏.
# -–¶–µ –¥–æ–∑–≤–æ–ª—è—î –ª–µ–≥–∫–æ –∑–∞–º—ñ–Ω–∏—Ç–∏ –∞–±–æ –∑–º—ñ–Ω–∏—Ç–∏ –æ–∫—Ä–µ–º–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–æ–≤—É –±–∞—Ç–∞—Ä–µ—é —á–∏ –∫–∞–º–µ—Ä—É) ‚Äî –Ω–µ –∑–º—ñ–Ω—é—é—á–∏ —Ä–µ—à—Ç—É –∫–ª–∞—Å—É.

# üìå –í–∏—Å–Ω–æ–≤–æ–∫:
# –ö–æ–º–ø–æ–∑–∏—Ü—ñ—è ‚Äî —Ü–µ –∫–æ–ª–∏ "–æ–±‚Äô—î–∫—Ç —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –∑ —ñ–Ω—à–∏—Ö –æ–±‚Äô—î–∫—Ç—ñ–≤", —ñ –º–∏ –±—É–¥—É—î–º–æ —Å–∫–ª–∞–¥–Ω—ñ —Å–∏—Å—Ç–µ–º–∏ –∑ –ø—Ä–æ—Å—Ç—ñ—à–∏—Ö –º–æ–¥—É–ª—ñ–≤.

# Exersice 1 from 8.3 st.143 

class Book_A5:
    def __init__(self, width, height):
        self.plbook = width * height

class Page_A4:
    def __init__(self, width, height):
        self.plpage = width * height

class Desk:
    def __init__(self, l, p):
        self.pldesk = l * p
    
    def math_pl(self, book_w, book_h, page_w, page_h):
        self.p1 = Book_A5(book_w, book_h)
        self.p2 = Page_A4(page_w, page_h)
    
    def math_diff_pl(self):
        self.math_diff = self.pldesk - (self.p1.plbook + self.p2.plpage)
    
    def show_pl(self):
        print(f'–ó–∞–≥–∞–ª—å–Ω–∞ –ø–ª–æ—â–∞ —Å—Ç–æ–ª—É: {str(self.pldesk)}—Å–º.–∫–≤')
        print(f'–ö–Ω–∏–≥–∞ –∑–∞–π–º–∞—î –ø–ª–æ—â—É: {str(self.p1.plbook)}—Å–º.–∫–≤')
        print(f'–ê—Ä–∫—É—à –∑–∞–π–º–∞—î –ø–ª–æ—â—É: {str(self.p2.plpage)}—Å–º.–∫–≤')
        print(f'–ó–∞–ª–∏—à–æ–∫ –ø–ª–æ—â—ñ = {str(self.math_diff)}—Å–º.–∫–≤')

ob1 = Desk(10, 15)
ob1.math_pl(5, 10, 2, 5)
ob1.math_diff_pl()
ob1.show_pl()
        