import math
import random
# mas = ['Kolia', 'Dina', 'Sacha', 'Maks', 'Olia']
# for i in range(len(mas)):
#     print(mas[i], end=' ')

# mas = []
# n = int(input('–í–≤–µ–¥—ñ—Ç—å –¥–æ–≤–∂–∏–Ω—É –º–∞—Å–∏–≤—É: '))
# a = int(input('–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ a: '))
# b = int(input('–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ b: '))
# for i in range(n):
#     a *= b
#     mas.append(a)
# for i in range(n):
#     print(mas[i])

# mas = []
# num_of_el = int(input('–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤: '))
# for i in range (num_of_el):
#     b = int(input(f'–í–≤–µ–¥—ñ—Ç—å {i}–π –µ–ª–µ–º–µ–Ω—Ç:'))
#     mas.append(b)
#     print(mas)
# sum_of_elements = 0
# for i in range (num_of_el):
#     sum_of_elements += mas[i]
# print(sum_of_elements)
# print(num_of_el)
# sum_of_elements /= num_of_el
# print(f'–°–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É = {sum_of_elements}')

# num_of_el = int(input('–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤: '))
# mas = []
# for i in range(num_of_el):
#     b = str(input(f'–í–≤–µ–¥—ñ—Ç—å {i+1} –µ–ª–µ–º–µ–Ω—Ç:'))
#     mas.append(b)
# print(mas, sep= ':')

# mas = []
# len_mas = int(input('–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É: '))
# for i in range(len_mas):
#     new_num = int(input(f'–í–≤–µ–¥—ñ—Ç—å {i+1} –µ–ª–µ–º–µ–Ω—Ç: '))
#     mas.append(new_num)
# print(mas)

# el_mas = 10
# mas = []
# for i in range(el_mas):
#     b = random.randint(4, 10)
#     mas.append(b)
#     print(f'–í –º–∞—Å–∏–≤ –¥–æ–¥–∞–Ω–æ –µ–ª–µ–º–µ–Ω—Ç: {b}')       # –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—É 
# mas = [random.randint(4,10) for i in range (el_mas)]
# print(mas)

# el_num = 5
# mas = []
# step = 4
# first_el = 3
# mas.append(first_el)
# for i in range(el_num-1):
#     first_el += step
#     mas.append(first_el)
# print(mas)

# alternate option
# mas = [3 + 4 * i for i in range(5)]
# print(mas)


# length_mas = 7
# mas = [random.randint(2, 6) for i in range (length_mas)]
# print(mas)          # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–∞—Å–∏–≤—É
# sum_el = sum(mas)
# print(sum_el)       # –≤–∏–≤—ñ–¥ —Å—É–º–∏ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É 

# mas = []
# sum_elements = 0
# mas_length = 7
# for i in range(mas_length):
#     b = random.randint(2, 6)
#     mas.append(b)
# print(mas)          # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–∞—Å–∏–≤—É
# for i in range(mas_length):
#     sum_elements += mas[i]
# print(sum_elements)          # –≤–∏–≤—ñ–¥ —Å—É–º–∏ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É 

# task 6 st62. 
# mas = [3]
# first_el = 3
# length_mas = 6 
# prog_denominator = 2
# sum_of_el = 0
# for i in range(length_mas-1):
#     first_el *= prog_denominator
#     mas.append(first_el)
# print(mas)
# print(sum(mas)/length_mas)

# üí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π (–∫–æ—Ä–æ—Ç—à–∏–π) –≤–∞—Ä—ñ–∞–Ω—Ç:
# mas = [3 * 2**i for i in range(6)]
# print(mas)
# print(sum(mas) / len(mas))

# mas = [random.randint(2, 9) for i in range(12)]
# print(mas)
# b = 0
# for i in range(len(mas)):
#     if mas[i] == 5:
#         b += 1
#         print(f'–ï–ª–µ–º–µ–Ω—Ç {mas[i]} –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó {i+1} –π–æ–≥–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å {b}')

# –ø—Ä–∏–∫–ª–∞–¥ –ø–æ—à—É–∫—É –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –í–Ü–î–°–û–†–¢–û–í–ê–ù–û–ú–£ –º–∞—Å–∏–≤—ñ –¥–≤—ñ–π–∫–æ–≤–∏–º –º–µ—Ç–æ–¥–æ–º 
# mas = [1, 4, 5, 2, 8, 10, 12, 15]
# mas = sorted(mas)
# print(mas)
# left = 0
# right = len(mas) - 1
# target = 10
# found = False 
# for i in range(len(mas)):
#     mid = (left + right) // 2
#     print(f'–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ—Ä–µ–¥–∏–Ω—É: {mid}')
#     if mas[mid] == target:
#         print(f'–ó–Ω–∞–π–¥–µ–Ω–æ {target} –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó {mid}')
#         found = True 
#         break
#     elif mas[mid] < target:
#         left = mid + 1
#     else:
#         right = mid + 1
# if not found:
#     print(f'—á–∏—Å–ª–æ {target} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–µ')

# mas = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# left = 0 
# right = len(mas) -1 
# target = 3
# found = False
# for i in range(len(mas)):
#     mid = (left + right)//2
#     if mas[mid] == target:
#         print(f'–ó–∞—î–±—ñ—Å—å {target} –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó {mid}')
#         found = True
#         break
#     elif mas[mid] > target:
#         right = mid + 1
#     else:
#         left = mid - 1
# if not found:
#     print('–Ω–µ–º–∞—î')

# mas = [6, 8, 13, 17, 19, 30]
# found = False
# left = 0 
# right = len(mas) - 1
# target = 17
# for i in range(len(mas)):
#     mid = (left + right) // 2
#     if mas[mid] == target:
#         print(f'–ó–∞—î–±—ñ—Å—å, {target} –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó {mid}')
#         found = True
#         break
#     elif mas[mid] > target:
#         right = mid - 1
#     else:
#         left = mid + 1
# if not found:
#     print('fuck it')


# mas_length = int(input('–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É: '))
# mas = []
# for i in range(mas_length):
#     new_el = int(input(f'–í–≤–µ–¥—ñ—Ç—å {i+1} –µ–ª–µ–º–µ–Ω—Ç: '))
#     mas.append(new_el)
# mas = sorted(mas)
# print(mas)          # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ –º–∞—Å–∏–≤—É       
# target = int(input('–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –¥–ª—è –ø–æ—à—É–∫—É: '))
# left = 0
# right = len(mas) - 1
# flag = False
# for i in range(len(mas)):
#     mid = (left + right) //2
#     if mas[mid] == target:
#         print(f'–ó–Ω–∞–π–¥–µ–Ω–æ {target} –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó {mid+1}, —ñ–Ω–¥–µ–∫—Å –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å–∏–≤—ñ {mid}')
#         flag = True
#         break
#     elif mas[mid] > target:
#         right = mid -1
#     else:
#         left = mid +1
# if not flag:
#     print('–ï–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!!!')

# mas = [random.randint(1, 50) for i in range(10)]
# mas = sorted(mas)
# print(f'–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π –º–∞—Å–∏–≤ —á–∏—Å–µ–ª: {mas}')
# target = int(input('–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –¥–ª—è –ø–æ—à—É–∫—É: '))
# left = 0
# right = len(mas) - 1
# flag = False
# for i in range(len(mas)):
#     mid = (left + right) // 2
#     if mas[mid] == target:
#         print(f'–ó–Ω–∞–π–¥–µ–Ω–æ {target} –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó {mid+1} –∑ —ñ–Ω–¥–µ–∫—Å–æ–º {mid}')
#         flag = True
#         break
#     elif mas[mid] < target:
#         left = mid + 1
#     else:
#         right = mid - 1
# if not flag:
#     print(f'–ï–ª–µ–º–µ–Ω—Ç–∞ {target} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!!!')




# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É
# mas = [random.randint(1, 50) for i in range(10)]
# mas = sorted(mas)
# print(f'–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π –º–∞—Å–∏–≤ —á–∏—Å–µ–ª: {mas}')

# –í–≤–µ–¥–µ–Ω–Ω—è —Ü—ñ–ª—ñ –¥–ª—è –ø–æ—à—É–∫—É
# target = int(input('–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –¥–ª—è –ø–æ—à—É–∫—É: '))

# –ë—ñ–Ω–∞—Ä–Ω–∏–π –ø–æ—à—É–∫ —á–µ—Ä–µ–∑ while
# left = 0
# right = len(mas) - 1
# found = False

# while left <= right:
#     mid = (left + right) // 2
#     if mas[mid] == target:
#         print(f'–ó–Ω–∞–π–¥–µ–Ω–æ {target} –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó {mid + 1}, —ñ–Ω–¥–µ–∫—Å: {mid}')
#         found = True
#         break
#     elif mas[mid] < target:
#         left = mid + 1
#     else:
#         right = mid - 1
# if not found:
#     print(f'–ï–ª–µ–º–µ–Ω—Ç–∞ {target} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!')

# mas = [random.randrange(0, 101,2) for i in range(15)]
# mas = sorted(mas)
# print(f'–í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –º–∞—Å–∏–≤: {mas}')
# target = int(input('–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ, —è–∫–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∞–π—Ç–∏: '))
# left = 0
# right = len(mas) - 1
# found = False
# while left <= right:
#     mid = (left + right) // 2 
#     if mas[mid] == target:
#         print(f'–ß–∏—Å–ª–æ {target} –∑–Ω–∞–π–¥–µ–Ω–æ !!! –ô–æ–≥–æ –ø–æ—Ä—è–¥–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è {mid+1}, —ñ–Ω–¥–µ–∫—Å: {mid} ')
#         found = True
#         break
#     elif mas[mid] < target:
#         left = mid + 1
#     else: 
#         right = mid - 1
# if not found:
#     print(f'–ß–∏—Å–ª–æ {target} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–µ!!!')

# mas = [random.randrange(2, 101, 2) for i in range (30)]
# mas = sorted(mas)
# print(f'–ú–∞—Å–∏–≤ –º–∞—î –≤–∏–≥–ª—è–¥: {mas}')
# target = int(input('–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –¥–ª—è –ø–æ—à—É–∫—É: '))
# left = 0
# right = len(mas) - 1
# found = False
# while left <= right:
#     mid = (left + right) // 2
#     if mas[mid] == target:
#         count_target = 0
#         found = True
#         print(f'–ß–∏—Å–ª–æ {target} –º–∞—î –ø–æ–∑–∏—Ü—ñ—é {mid+1} (—ñ–Ω–¥–µ–∫—Å: {mid})')
#         break
#     elif mas[mid] < target:
#         left = mid +1
#     else:
#         right = mid - 1
# if not found:
#     print(f'–ß–∏—Å–ª–æ {target} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–µ')

# mas = ['–±–∞–π—Ç', "–ø—Ä–∏–Ω—Ç–µ—Ä", "–ø—Ä–æ—Ü–µ—Å–æ—Ä", "–º–æ–Ω—ñ—Ç–æ—Ä"]
# target = "–ø—Ä–∏–Ω—Ç–µ—Ä"
# for i in range(len(mas)):
#     if mas[i] == target:
#         print(f'—Ä—è–¥–æ–∫ "{target}" —Ä–æ–∑—Ç–∞—à–æ–≤–∞–Ω–æ –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó {i+1}')

# –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –∫–æ–¥ .index() method 
# print(f'–†—è–¥–æ–∫ "{target}" —Ä–æ–∑—Ç–∞—à–æ–≤–∞–Ω–æ –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó {mas.index(target)+1}')

# mas = [13, 7, 6, 7, 9, 7]
# target = 7
# count_target = 0
# found = False
# for i in range(len(mas)):
#     if mas[i] == target:
#         count_target += 1
#         found = True
# if not found:
#     print(f'–ß–∏—Å–ª–æ {target} –Ω–µ –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è –≤ –º–∞—Å–∏–≤—ñ')
# else:
#     print(f'–ß–∏—Å–ª–æ {target} –≤ –º–∞—Å–∏–≤—ñ –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è {count_target} —Ä–∞–∑—ñ–≤')

# mas = ["–±–ª–æ–∫", "—Ñ–∞–π–ª", "–±—ñ—Ç", "–∫–æ–ª–æ–Ω–∫–∞", "–º–∏—à–∞"]
# # max_element = max(mas)
# # min_element = min(mas)
# # print(max_element)
# # print(min_element)

# # 2–π –≤–∞—Ä—ñ–∞–Ω—Ç
# max_el = mas[0]
# min_el = mas[0]
# for i in range (len(mas)):
#     if max_el < mas[i]:
#         max_el = mas[i]
#     if min_el > mas[i]:
#         min_el = mas[i]
# print(max_el, min_el)

# mas = [random.randint(3, 9) for i in range (10)]
# count =  mas.count(6)
# print(mas)
# if count != 0:
#     print(f'–ß–∏—Å–ª–æ 6 —î –≤ —Å–ø–∏—Å–∫—É, –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è {count} —Ä–∞–∑—ñ–≤')
# else: 
#     print(f'–ß–∏—Å–ª–∞ 6 –≤ —Å–ø–∏—Å–∫—É –Ω–µ–º–∞—î')

# –¥—Ä—É–≥–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç 
# mas = [random.randint(3, 9) for i in range (10)]
# print(mas)
# count = 0
# index_list = []
# for i in range(len(mas)):
#     if mas[i] == 6:
#         count += 1
#         new_index = i + 1
#         index_list.append(new_index)
# if count != 0:
#     print(f'–ß–∏—Å–ª–æ 6 —î –≤ —Å–ø–∏—Å–∫—É, –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è –ø—ñ–¥ —Ç–∞–∫–∏–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏ {index_list} ')

# mas = [96, 34, 11, 105, 24]
# min_el = mas[0]
# max_el = mas[0]
# for i in range(len(mas)):
#     if min_el > mas[i]:
#         min_el = mas[i]
#     if max_el < mas[i]:
#         max_el = mas[i]
# print(f'—É –º–∞—Å–∏–≤—ñ {mas} –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç {max_el} –∑ –ø–æ–∑–∏—Ü—ñ—î—é {mas.index(max_el) + 1}(—ñ–Ω–¥–µ–∫—Å: {mas.index(max_el)})')
# print(f'–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç {min_el}, –∑ –ø–æ–∑–∏—Ü—ñ—î—é {mas.index(min_el)+ 1}(—ñ–Ω–¥–µ–∫—Å: {mas.index(min_el)})')

# mas = [96, 34, 11, 105, 24]
# min_el = min(mas)
# max_el = max(mas)
# print(f'—É –º–∞—Å–∏–≤—ñ {mas} –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç {max_el} –∑ –ø–æ–∑–∏—Ü—ñ—î—é {mas.index(max_el) + 1}(—ñ–Ω–¥–µ–∫—Å: {mas.index(max_el)})')
# print(f'–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç {min_el}, –∑ –ø–æ–∑–∏—Ü—ñ—î—é {mas.index(min_el)+ 1}(—ñ–Ω–¥–µ–∫—Å: {mas.index(min_el)})')

# –í–∏–≤–µ—Å—Ç–∏ —Å—É–º—É —á–∏—Å–µ–ª –≤—ñ–¥ 1 –¥–æ N
# –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å —á–∏—Å–ª–æ N, –ø—Ä–æ–≥—Ä–∞–º–∞ –≤–∏–≤–æ–¥–∏—Ç—å —Å—É–º—É –≤—Å—ñ—Ö —á–∏—Å–µ–ª –≤—ñ–¥ 1 –¥–æ N –≤–∫–ª—é—á–Ω–æ.
# end_number = int(input('–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –ø–æ —è–∫–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å—É–º—É —á–∏—Å–µ–ª –≤—ñ–¥ 1: '))
# sum_number = 0 
# for i in range(1, end_number+1, 1):
#     sum_number += i
# print(sum_number)

# –í–∏–≤–µ—Å—Ç–∏ –≤—Å—ñ –ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞ –≤—ñ–¥ 1 –¥–æ N
# –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å —á–∏—Å–ª–æ N, –ø—Ä–æ–≥—Ä–∞–º–∞ –≤–∏–≤–æ–¥–∏—Ç—å —É—Å—ñ –ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞ –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ.
# end_num = int(input('–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ: '))
# for i in range(2, end_num+1, 2):
#     print(i)

# –û–±—á–∏—Å–ª–∏—Ç–∏ —Ñ–∞–∫—Ç–æ—Ä—ñ–∞–ª —á–∏—Å–ª–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é while
# –§–∞–∫—Ç–æ—Ä—ñ–∞–ª ‚Äî –¥–æ–±—É—Ç–æ–∫ —É—Å—ñ—Ö —Ü—ñ–ª–∏—Ö —á–∏—Å–µ–ª –≤—ñ–¥ 1 –¥–æ N.